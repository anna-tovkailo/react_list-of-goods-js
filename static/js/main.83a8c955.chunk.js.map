{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsFromServer","App","useState","visibleGoods","setVisibleGoods","sortField","setSortField","reversed","setReversed","className","type","classNames","onClick","sort","good1","good2","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAsB,WACtBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KA6BA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYN,IAAcP,IAE9Bc,QArCe,WACrBR,EAAgB,UAAIJ,GACjBa,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,OAC9CT,EAAaR,GACbU,EAAY,KA0BR,iCAYA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYN,IAAcN,IAE9Ba,QA1Ca,WACnBR,EAAgB,UAAIJ,GACjBa,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,WAC/CX,EAAaP,GACbS,EAAY,KA+BR,4BAYA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAyB,QAAbJ,IAEhBK,QAzCQ,WACdR,EAAgB,YAAID,GAAce,WAGlCV,EAFYD,EAAW,GAAK,QAgCxB,qBAYA,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAvDM,WACZR,EAAgBJ,GAChBM,EAAa,IACbE,EAAY,KAiDR,sBASF,6BACGL,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCtGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83a8c955.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState('');\n\n  const sortByAlphabet = () => {\n    setVisibleGoods([...goodsFromServer]\n      .sort((good1, good2) => good1.localeCompare(good2)));\n    setSortField(SORT_FIELD_ALPHABET);\n    setReversed('');\n  };\n\n  const sortByLength = () => {\n    setVisibleGoods([...goodsFromServer]\n      .sort((good1, good2) => good1.length - good2.length));\n    setSortField(SORT_FIELD_LENGTH);\n    setReversed('');\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortField('');\n    setReversed('');\n  };\n\n  const reverse = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    const rev = reversed ? '' : 'yes';\n\n    setReversed(rev);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': reversed !== 'yes' },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}